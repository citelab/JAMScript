JAMJS <: ES6 {
    GlobalElement   += Jexport
                    | Jamnifest
                    | Jcond_decl
                    | Jdata_decl
                    | Task_def

    Jexport         = jexport identifier ";"

    Jamnifest       = ( japp | jcomponent ) identifier "{" ListOf<Jfile_list, ";"> ";"? "}"

    Jfile_list      = jside ":" ListOf<jfile_path<"jj">, ",">
                    | cside ":" ListOf<jfile_path<"jc">, ",">
                    | header ":" ListOf<jfile_path<"jc">, ",">
                    | others ":" ListOf<jfile_path<jfile_others>, ",">
                    | components ":" ListOf<jfile_path<"jxc">, ",">
                    | required_clibs ":" ListOf<jfile_path<"h">, ",">
                    | required_jlibs ":" ListOf<jfile_path<"js">, ",">
                    | required_linker_flags ":" ListOf<jlinker_flag, ",">

     jfile_others   = "js" | "c"

     jfile_path<extension> = (~( jfile_end<extension> space* jfile_terminator ) jfile_path_character)+ jfile_end<extension>
     jfile_end<extension>  = "." ( extension ) ~identifierPart
     jfile_path_character  = ~(jfile_path_escaped_character | "*") sourceCharacter     --nonEscaped
                           | "\\" (jfile_path_escaped_character)                       --escaped
                           | "*"                                                       --glob
     jfile_terminator      = "," | ";" | "}"
     jfile_path_escaped_character = jfile_terminator | "\"" | "\\"

     jlinker_flag          = "-" identifier

    Async_task  = jasync Jcond_specifier? Jtask_attr_spec? identifier "(" Jamparam_type_lst ")" FunctionBody

    Sync_task   = jsync Jamtype_return Jcond_specifier? Jtask_attr_spec? identifier "(" Jamparam_type_lst ")" FunctionBody

    Jamtype_return  = Jamtype "[" decimalIntegerLiteral "]"            -- Array
                    | void                                             -- Void
                    | Jamtype

    Jamparam_type_lst = ListOf<Jamparam_decl, ",">

    Jamparam_decl   = identifier ":" char "*"                          -- String
                    | identifier ":" Jamtype ( "[" "]" )?              -- Param

    Jamtype         = unsigned? int                                    -- Int
                    | unsigned? long long int?                         -- LongLongInt
                    | long unsigned long int?                          -- LongUnsignedLongInt
                    | long long unsigned int?                          -- LongLongUnsignedInt
                    | unsigned? char                                   -- Char
                    | float                                            -- Float
                    | double                                           -- Double
                    | unsigned                                         -- IntUnsigned

    Struct_entry    = Jamtype identifier ("[" decimalIntegerLiteral "]")? ";"

    Jdata_spec      = Jamtype identifier "[" decimalIntegerLiteral "]" as Jflow_type ";"   -- Array
                    | struct identifier "{" Struct_entry+ "}" identifier as Jflow_type ";" -- Struct
                    | Jamtype identifier as Jflow_type ";"                                 -- Basic

    Jflow_type      = dflow | uflow

    Jdata_decl      = jdata identifier? "{" Jdata_spec+ "}"

    Jcond_decl      = ( jcond | jreuse ) "{" Jcond_entry+ "}"

    Jcond_entry     = identifier "(" identifier "," identifier ")" FunctionBody

    Jcond_specifier = "{" identifier "}"

    Jtask_attr_spec = "[" NonemptyListOf<Jtask_attr, ",">  ","? "]"

    Jtask_attr      = node_type "=" (cloud | fog | device)
                    | reuse "=" (default | identifier)
                    | reuse_history "=" decimalIntegerLiteral
                    | retry "=" decimalIntegerLiteral
                    | timeout "=" decimalLiteral

    Task_def        = Sync_task
                    | Async_task

    keyword         += jexport | japp | jcomponent | jsync | jasync | jdata | jcond | jreuse

    as = "as" ~identifierPart
    jexport = "jexport" ~identifierPart
    japp = "japp" ~identifierPart
    jcomponent = "jcomponent" ~identifierPart
    int = "int" ~identifierPart
    long = "long" ~identifierPart
    char = "char" ~identifierPart
    unsigned = "unsigned" ~identifierPart
    float = "float" ~identifierPart
    double = "double" ~identifierPart
    struct = "struct" ~identifierPart
    dflow = "dflow" ~identifierPart
    uflow = "uflow" ~identifierPart
    jasync = "jasync" ~identifierPart
    jsync = "jsync" ~identifierPart
    jdata = "jdata" ~identifierPart
    jcond = "jcond" ~identifierPart
    jreuse = "jreuse" ~identifierPart

    // attributes
    reuse = "reuse" ~identifierPart
    node_type = "node_type" ~identifierPart
    cloud = "cloud" ~identifierPart
    fog = "fog" ~identifierPart
    device = "device" ~identifierPart
    reuse_history = "reuse_history" ~identifierPart
    retry = "retry" ~identifierPart
    timeout = "timeout" ~identifierPart

    // manifest
    jside = "jside" ~identifierPart
    cside = "cside" ~identifierPart
    header = "header" ~identifierPart
    others = "others" ~identifierPart
    components = "components" ~identifierPart
    required_clibs = "required_clibs" ~identifierPart
    required_jlibs = "required_jlibs" ~identifierPart
    required_linker_flags = "required_linker_flags" ~identifierPart
}
