#!/bin/bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

die() {
    printf '%s\n' "$1" >&2
    exit 1
}

show_usage() {
    cat << EOF
JAMVis, a visualizer for JAMScript Networks.

JAMVis works by running starting a webserver on the same machine that the global registry runs on. It recursively scans all brokers by looking through all registries advertised accross the network. All network state is passively monitered and visualized.

Comand Line Options:
--help             Shows this message
--app={appname}    Selects which app JAMVis should target (REQUIRED)
--batch            Batches JAMScript command events to reduce websocket traffic.
--remote={host}    Starts JAMVis webserver on remote host through ssh remote command execution and tunneling. Remote host must have JAMScript installed.

Web interface:
By default the port the website gets hosted on is :8580.

click and drag to look.
scroll to zoom.

'h' toggles visibility of text on screen
'c' toggles visibility of device-fog connections
'l' toggles visibility of local registry connections

EOF
}
batch=false
while :; do
    case $1 in
        --help)
            show_usage
            exit
            ;;
	--batch)
            batch=true
            ;;
	--app=?*)
	    app=${1#*=}
	    ;;
	--remote=)
	die 'ERROR: "--app" requires a non-empty option argument.'
	;;
	--remote=?*)
	    remote=${1#*=}
	    ;;
	--remote=)
	die 'ERROR: "--remote" requires a non-empty option argument.'
	;;
	*)
	    break
    esac
    shift
done

if [ -z "$remote" ]; then
    node $SCRIPT_DIR/jamvis_internal/serv.js $app $batch
    #open "localhost:8580"
else
    echo "Connecting to remote."
    #(sleep 3 && open "http://localhost:8580") &
    ssh -t -t -L 8580:localhost:8580 -L 8681:localhost:8681 $remote ". ~/.bashrc && jamvis --app=$app"
fi


